#!/usr/bin/env sh
. "$(dirname "$0")/husky.sh"

# Enforce commit message types on all commits being pushed
#    Allowed types: test, feat, fix, chore, docs, refactor, style, ci, perf
allowed='^(test|feat|fix|chore|docs|refactor|style|ci|perf):.+$'
invalid=0

# Read the ref updates from stdin (local_ref local_sha remote_ref remote_sha)
while read local_ref local_sha remote_ref remote_sha
do
  # If this is a new branch, remote_sha is all zeroes; compare against empty tree
  if [ "$remote_sha" = "0000000000000000000000000000000000000000" ]; then
    range="$local_sha"
  else
    range="$remote_sha..$local_sha"
  fi
done

# Check each commit in that range
for commit in $(git rev-list $range)
do
  subject="$(git log --format=%s -n1 $commit)"
  if ! echo "$subject" | grep -Eq "$allowed"; then
    echo ""
    echo "â›”  Commit $commit has invalid message:"
    echo "    \"$subject\""
    echo "    Must start with one of: test, feat, fix, chore, docs, refactor, style, ci, perf"
    echo ""
    invalid=1
  fi
done

[ $invalid -eq 1 ] && exit 1
